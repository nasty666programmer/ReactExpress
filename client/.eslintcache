[{"/home/dev/Рабочий стол/block checking/client/src/index.js":"1","/home/dev/Рабочий стол/block checking/client/src/Components/FormCheck.js":"2","/home/dev/Рабочий стол/block checking/client/src/App.js":"3","/home/dev/Рабочий стол/block checking/client/src/Components/About.js":"4","/home/dev/Рабочий стол/block checking/client/src/main.js":"5","/home/dev/Рабочий стол/block checking/client/src/Components/auth/login/LoginForm.js":"6","/home/dev/Рабочий стол/block checking/client/src/Components/auth/login/Login.js":"7"},{"size":199,"mtime":1610722156222,"results":"8","hashOfConfig":"9"},{"size":1890,"mtime":1610922349173,"results":"10","hashOfConfig":"9"},{"size":1185,"mtime":1611609556277,"results":"11","hashOfConfig":"9"},{"size":624,"mtime":1610920036629,"results":"12","hashOfConfig":"9"},{"size":173,"mtime":1611596009475,"results":"13","hashOfConfig":"9"},{"size":817,"mtime":1611598571376,"results":"14","hashOfConfig":"9"},{"size":756,"mtime":1611609300908,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1a209zw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dev/Рабочий стол/block checking/client/src/index.js",[],["32","33"],"/home/dev/Рабочий стол/block checking/client/src/Components/FormCheck.js",["34","35"],"import {useForm} from 'react-hook-form';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport '../css/FormCheck.css';\nimport logo from '../imgages/sos3.png';\n\nfunction FormCheck() {\n    const shortid = require('shortid');\n    const [forms,setForms] = useState({\n        id:shortid.generate(),\n        cause_1:' ',\n        cause_2:'',\n        date:null,\n        listBlocks_1:'',\n        listBlocks_2:''\n    })\n   const handleChange = (event) => {\n       const {name,value} = event.currentTarget;\n    setForms({...forms,\n        [name]:value\n       })\n   }\n\n    const handleSubmit = (event) => {\n        console.log(forms)  \n      \n        axios.post('/formsCheck',forms)\n        .then(res => console.log(\"data = \" + {...forms}))\n        .catch(err => {\n            console.log(\"error= \"+err)\n        })\n        event.preventDefault();\n    }\n    return (\n        <div className='wrapper'>\n            <form onSubmit={handleSubmit} >\n    <input type=\"date\" value={forms.date} onChange={handleChange} name=\"date\" placeholder=\"Дата\" className='dateForm'/>\n        <br/>\n    <label for=\"lname\">Причина1</label>\n    <input type=\"text\" value={forms.cause_1} onChange={handleChange} name=\"cause_1\" placeholder=\"Причина 1\"/>\n    <input type='text' value={forms.listBlocks_1} name='listBlocks_1' onChange={handleChange} placeholder='список блоков'/>\n    <label for=\"lname\">Причина 2</label>\n    <input type=\"text\" value={forms.cause_2} onChange={handleChange} name=\"cause_2\" placeholder=\"Причина 2\"/>\n    <input type='text' value={forms.listBlocks_2} name='listBlocks_2' onChange={handleChange} placeholder='список блоков'/>\n\n    <button type='submit' className='btn_submit'>Send</button>\n            </form>\n            <img src={logo} alt='logo' className='logoSos3' />\n        </div>\n    )\n}\n\nexport default FormCheck;","/home/dev/Рабочий стол/block checking/client/src/App.js",["36","37","38"],"/home/dev/Рабочий стол/block checking/client/src/Components/About.js",[],"/home/dev/Рабочий стол/block checking/client/src/main.js",[],"/home/dev/Рабочий стол/block checking/client/src/Components/auth/login/LoginForm.js",[],"/home/dev/Рабочий стол/block checking/client/src/Components/auth/login/Login.js",["39","40","41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":9,"nodeType":"50","messageId":"51","endLine":1,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":12,"column":36,"nodeType":"55","endLine":12,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":13,"column":31,"nodeType":"55","endLine":13,"endColumn":34},{"ruleId":"56","severity":1,"message":"57","line":15,"column":11,"nodeType":"55","endLine":15,"endColumn":94},{"ruleId":"48","severity":1,"message":"58","line":15,"column":12,"nodeType":"50","messageId":"51","endLine":15,"endColumn":17},{"ruleId":"48","severity":1,"message":"59","line":15,"column":18,"nodeType":"50","messageId":"51","endLine":15,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":18,"column":24,"nodeType":"62","messageId":"63","endLine":18,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":18,"column":57,"nodeType":"62","messageId":"63","endLine":18,"endColumn":59},{"ruleId":"60","severity":1,"message":"64","line":32,"column":22,"nodeType":"62","messageId":"63","endLine":32,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]