[{"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/index.js":"1","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowList.js":"2","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/auth/login/Login.js":"3","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/auth/login/LoginForm.js":"4","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/App.js":"5","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/FavoriteTeam.js":"6","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/FormCheck.js":"7","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/main.js":"8","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowChecking.js":"9","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowImagesFull.js":"10","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/About.js":"11","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/UserGuid.js":"12"},{"size":227,"mtime":1616023842000,"results":"13","hashOfConfig":"14"},{"size":1828,"mtime":1617061705741,"results":"15","hashOfConfig":"14"},{"size":785,"mtime":1617062439741,"results":"16","hashOfConfig":"14"},{"size":2255,"mtime":1616719964235,"results":"17","hashOfConfig":"14"},{"size":1191,"mtime":1617061682425,"results":"18","hashOfConfig":"14"},{"size":2510,"mtime":1616933484103,"results":"19","hashOfConfig":"14"},{"size":4585,"mtime":1616725341097,"results":"20","hashOfConfig":"14"},{"size":3756,"mtime":1617061369526,"results":"21","hashOfConfig":"14"},{"size":2438,"mtime":1617039930871,"results":"22","hashOfConfig":"14"},{"size":1002,"mtime":1616932694959,"results":"23","hashOfConfig":"14"},{"size":1462,"mtime":1616713689067,"results":"24","hashOfConfig":"14"},{"size":1474,"mtime":1616931770735,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1xnmlfn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/index.js",["60"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Main from './main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["61","62"],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowList.js",["63"],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/auth/login/Login.js",["64","65","66","67","68","69","70","71","72","73","74"],"import LoginForm from './LoginForm';\nimport {useEffect, useState} from 'react';\nimport App from '../../../App';\nimport {BrowserRouter as Router,Route,Switch,Link} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Login() {\n   const [adminUser,setAdminUser] = useState();\n    let history = useHistory();\n\n    const [log,setLog] = useState({\n        log:'',\n    });\n    const [error,setError] = useState('');\n\n    const Login = details => {\n       setLog(details);\n  }\n \n    const Logout = () => {\n        localStorage.removeItem(\"hash\");\n        setLog({log:''});\n    }\n\n    return (\n        <div>\n            {localStorage.getItem(\"hash\") ? <App Logout={Logout} /> : <LoginForm Login={Login}/>}\n           \n        </div>\n    )\n}\n\nexport default Login;","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/auth/login/LoginForm.js",["75","76"],"import React,{useEffect, useState} from 'react';\nimport {TextField} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\nimport {BounceLoader} from 'react-spinners';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow:1,\n      \n      height:'350px'\n    },\n    menuButton: {\n      marginTop:theme.spacing(3)\n    },\n    forms: {\n        marginTop:theme.spacing(25)\n    },\n    textField: {\n        width: '20rem',\n        textAlign:'center'\n    }\n  }))\n\nfunction LoginForm({Login}) {\n    const [details,setDetails] = useState({\n        log:'',\n        pass: ''\n    });\n\n    const classes = useStyles();\n    const [isComplete,setIsComplete] = useState(false);\n\n    const handleChange = (e) => {\n        const {name,value} = e.currentTarget;\n        setDetails({...details,\n            [name]:value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n            axios.post('/login',details)\n            .then(response => {\n                localStorage.setItem('hash', response.data);\n                Login(response.data);\n            })\n            .catch(error => console.log(error))\n        setDetails({...details,log:'',pass:''});\n    }\n    \n    const loaderAuth = () => {\n        setTimeout(() => setIsComplete(!isComplete),1500)\n    }\n\n    return (\n        <div className={classes.forms}>\n            <form onSubmit={handleSubmit} className={classes.root} noValidate align='center'>\n                <TextField className={classes.textField} id=\"standard-basic\" label=\"Login\"  value={details.log} onChange={(e) => setDetails({...details, log:e.target.value})}  type='text' name='login'/>\n                <br/>\n                <TextField className={classes.textField} d=\"standard-basic\" label=\"Password\"  value={details.pass} onChange={(e) => setDetails({...details, pass:e.target.value})}  type='password' name='password'  />\n                <br/>\n                { isComplete ? <BounceLoader /> : <Button onClick={loaderAuth} align='center' className={classes.menuButton} color='primary' type='submit' variant='contained'>Log In</Button>}\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm;","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/App.js",["77"],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/FavoriteTeam.js",[],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/FormCheck.js",["78","79","80","81"],"import {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport {BounceLoader} from 'react-spinners';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow:1\n    },\n    textField: {\n        width: '18rem',\n        textAlign:'center',\n        marginTop:theme.spacing(2)\n    },\n    buttons: {\n        marginTop:'1rem'\n    },\n    input: {\n        display: 'none',\n        width: '18rem',\n        textAlign:'center',\n        marginTop:theme.spacing(2)\n    },\n    resOk: {\n        color: '#31b31a',\n        backgroundColor: '#e6e6e6',\n        borderRadius:'3%',\n        fontSize:'1rem',\n        boxShadow:'0rem 0rem 1rem 0rem black',\n        width: '30%',\n        height: '10rem',\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    resErr: {\n        color: 'orange',\n        backgroundColor: '#e6e6e6',\n        borderRadius:'3%',\n        fontSize:'1rem',\n        boxShadow:'0rem 0rem 1rem 0rem black',\n        width: '30%',\n        height: '10rem',\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n  }))\n\n\nfunction FormCheck() {\n    let classes = useStyles()\n    const shortid = require('shortid');\n    const [file,setFile] = useState();\n    const [date,setDate] = useState();\n    const [flag,setFlag] = useState(false);\n    const [sendData,setSendData] = useState([]);\n    const [sendErr,setSendErr] = useState([])\n\n    const [forms,setForms] = useState({\n        id:shortid.generate(),\n        date:null,\n        images:''\n    })\n   const handleChange = (event) => {\n        const {value} = event.currentTarget;\n        setDate(value);\n   }\n\n   /*const handleChangeFile = (event) => {\n   let file = event.target.files[0];\n    console.log(file)\n        let data = new FormData();\n        data.append('image',file);\n        setForms({...forms, images:data})\n        \n   let file = event.target.files[0];\n    let blob = new Blob([file],{type: 'image/jpeg'})\n    console.log(blob)\n    setForms({...forms, images:blob});\n      \n     let reader = new FileReader();\n       reader.readAsDataURL(blob); // конвертирует Blob в base64 и вызывает onload\n\n       reader.onload = function() {\n           \n           setForms({...forms, images:reader.result})\n       };\n   }*/\n\n    const handleSubmit = () => {\n        setFlag(true);\n        const data = new FormData();\n        data.append('date',date);\n        data.append('file',file);\n    \n        axios.post('/form-check',data)\n        .then(res => {\n            setSendData(res);\n            setFlag(false);\n            setForms({...forms, date:'',images:''})\n        })\n        .catch(err => {\n            setSendErr(err)\n        })\n    }\n\n    const closeMess = () => {\n        setSendData([]);\n    }\n\n    return (\n        <div>\n            <form align='center'>\n                <TextField  size='small' variant='outlined' className={classes.textField} id=\"standard-basic\"  type=\"date\" value={forms.date} onChange={handleChange} name=\"date\" placeholder=\"Дата\" />\n                    <br/>\n                    <input  onChange={e => {\n                        const file = e.target.files[0];\n                        setFile(file);\n                    }} className={classes.input} id=\"icon-button-photo\" type=\"file\" />\n                <label htmlFor=\"icon-button-photo\">\n                    <IconButton color=\"primary\" component=\"span\">\n                        <PhotoCamera />\n                    </IconButton>\n                </label>\n                    <br/>\n                {flag ? <BounceLoader /> : <Button  onClick={handleSubmit} className={classes.buttons} type='button' variant='contained'  color='primary'>Отправить</Button>}\n            </form>\n            {sendData.length != 0 && <div className={classes.resOk}>Данные успешно отправленно<CloseIcon style={{color:'red'}}onClick={closeMess}/></div>}\n            {sendErr.length != 0 && <div className={classes.resErr}>Произошла ошибка<CloseIcon style={{color:'red'}}onClick={closeMess}/></div>}       \n        </div>\n    )\n}\n\nexport default FormCheck;",["82","83"],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/main.js",[],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowChecking.js",["84","85","86","87","88"],"import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport ShowImagesFUll from './ShowImagesFull';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {BounceLoader} from 'react-spinners';\nimport '../fonts/fonts.css';\n\nconst useStyles = makeStyles({\n    root: {\n      textAlign:'center',\n    },\n    title:{\n        textAlign:'center'\n    },\n    date: {\n        fontSize:'1rem',\n        margin:'2rem'\n    },\n    imgPosition: {\n        textAlign:'center'\n    },\n    container: {\n        display:'inline-block',\n        flexWrap:'nowrap',\n        margin:'1rem'\n    },\n    loader: {\n        marginLeft:'45%',\n        marginTop:'2rem'\n    },\n    buttonFonts: {\n        fontFamily: 'Gotham Pro Bold',\n        fontWeight: 'bold',\n        backgroundColor: '#a50606',\n        color: 'black',\n        borderRadius:'1rem'\n    }\n  });\n\nfunction ShowChecking() {\n    const classes = useStyles();\n    const [blockList,setBlockList] = useState([]);\n    const [pageImageFull,setPageImageFull] = useState([]);\n    const [flag,setFlag] = useState(false);\n    const [count,setCount] = useState(1);\n    const [data,setData] = useState();\n\n    useEffect(() => {\n        axios.get('/show-form-check')\n        .then(res => setBlockList(res.data))\n        .catch(err => console.log(err))\n    },[]);\n\n    const showFullImg = (image) => {\n        setFlag(!flag);\n        setData(image);\n    }\n\n    return (\n        <div className={`fonts ${classes.root}`}>\n            <h1 className={classes.title}>Список проверки блоков</h1>\n            {flag && ReactDOM.createPortal(\n                    <ShowImagesFUll imgLink={data} onClose={showFullImg} />\n               ,document.getElementById('modal'))}\n                {blockList.map(el => \n                    <div className={classes.container}>\n                        <div className={classes.date}>{el.date}</div>\n                        <Button variant='contained' className={classes.buttonFonts} color='primary' onClick={() => showFullImg(el.img)}>Показать График</Button>\n                    </div>\n                )}  \n                <div className={classes.loader}>\n                    {blockList.length == 0 ? <BounceLoader style={{position:'absolute',marginRight:'30%'}}/> : null}\n                </div>\n        </div>\n    )\n}\n\nexport default ShowChecking;",["89","90"],"/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowImagesFull.js",["91","92","93"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../Modale.css';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n    },\n    title:{\n        textAlign:'center'\n    }\n  });\n\nfunction ShowImagesFUll(props) {\n    const {imgLink} = props;\n    const classes = useStyles();\n    const base64String = btoa(String.fromCharCode(...new Uint8Array(imgLink.data)));\n\n    return (\n      <div class=\"modale\">\n        <div className={\"modal-dialog\"}>\n          <div className={\"modal-content\"}>\n            <div className={\"modal-header\"}>\n              <h3 className={\"modal-title\"}>Картинка</h3>\n                <CloseIcon onClick={props.onClose} />\n            </div>\n            <div className={\"modal-body fonts\"}>    \n            <img src={`data:image/png;base64,${base64String}`} />\n            </div>\n          </div>\n        </div>\n    </div>\n    )\n}\n\nexport default ShowImagesFUll;","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/About.js",["94"],"import React, { useRef, useState} from 'react'\nimport { useTrail, animated as a } from \"react-spring\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './css/styles.css';\n\nconst items = [\"Посмотри вниз\", \"Списки посещений\", \"\", \"\"];\nconst config = { mass: 5, tension: 2000, friction: 200 };\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n    }, \n    text: {\n      margin: '0 auto',\n      width: '100%',\n      padding: '20px'\n    }\n  });\n\nfunction About() {\n    let classes = useStyles();\n    const [toggle, set] = useState(true);\n    const trail = useTrail(items.length, {\n      config,\n      opacity: toggle ? 1 : 0,\n      x: toggle ? 0 : 20,\n      height: toggle ? 80 : 0,\n      from: { opacity: 0, x: 20, height: 0 }\n    });\n   \n    return (\n        <div className={classes.text}>\n          <div className=\"trails-main\" onClick={() => set(state => !state)}>\n            <div>\n              {trail.map(({ x, height, ...rest }, index) => (\n                <a.div\n                  key={items[index]}\n                  className=\"trails-text\"\n                  style={{\n                    ...rest,\n                    transform: x.interpolate(x => `translate3d(0,${x}px,0)`)\n                  }}\n                >\n                  <a.div style={{ height }}>{items[index]}</a.div>\n                </a.div>\n              ))}\n          </div>\n        </div>\n        </div>\n    )\n}\n\nexport default About;\n\n\n\n","/home/great_dev/Рабочий стол/ReactExpress-main/client/src/UserGuid.js",[],{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":11},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":47,"column":133,"nodeType":"105","messageId":"106","endLine":47,"endColumn":134},{"ruleId":"95","severity":1,"message":"107","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":18},{"ruleId":"95","severity":1,"message":"108","line":4,"column":26,"nodeType":"97","messageId":"98","endLine":4,"endColumn":32},{"ruleId":"95","severity":1,"message":"109","line":4,"column":33,"nodeType":"97","messageId":"98","endLine":4,"endColumn":38},{"ruleId":"95","severity":1,"message":"110","line":4,"column":39,"nodeType":"97","messageId":"98","endLine":4,"endColumn":45},{"ruleId":"95","severity":1,"message":"111","line":4,"column":46,"nodeType":"97","messageId":"98","endLine":4,"endColumn":50},{"ruleId":"95","severity":1,"message":"112","line":9,"column":11,"nodeType":"97","messageId":"98","endLine":9,"endColumn":20},{"ruleId":"95","severity":1,"message":"113","line":9,"column":21,"nodeType":"97","messageId":"98","endLine":9,"endColumn":33},{"ruleId":"95","severity":1,"message":"114","line":10,"column":9,"nodeType":"97","messageId":"98","endLine":10,"endColumn":16},{"ruleId":"95","severity":1,"message":"115","line":12,"column":12,"nodeType":"97","messageId":"98","endLine":12,"endColumn":15},{"ruleId":"95","severity":1,"message":"116","line":15,"column":12,"nodeType":"97","messageId":"98","endLine":15,"endColumn":17},{"ruleId":"95","severity":1,"message":"117","line":15,"column":18,"nodeType":"97","messageId":"98","endLine":15,"endColumn":26},{"ruleId":"95","severity":1,"message":"107","line":1,"column":15,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"118","line":35,"column":11,"nodeType":"97","messageId":"98","endLine":35,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":37,"column":11,"nodeType":"121","endLine":37,"endColumn":124},{"ruleId":"95","severity":1,"message":"107","line":1,"column":9,"nodeType":"97","messageId":"98","endLine":1,"endColumn":18},{"ruleId":"95","severity":1,"message":"122","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":137,"column":30,"nodeType":"125","messageId":"126","endLine":137,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":138,"column":29,"nodeType":"125","messageId":"126","endLine":138,"endColumn":31},{"ruleId":"99","replacedBy":"127"},{"ruleId":"101","replacedBy":"128"},{"ruleId":"95","severity":1,"message":"129","line":45,"column":12,"nodeType":"97","messageId":"98","endLine":45,"endColumn":25},{"ruleId":"95","severity":1,"message":"130","line":45,"column":26,"nodeType":"97","messageId":"98","endLine":45,"endColumn":42},{"ruleId":"95","severity":1,"message":"131","line":47,"column":12,"nodeType":"97","messageId":"98","endLine":47,"endColumn":17},{"ruleId":"95","severity":1,"message":"132","line":47,"column":18,"nodeType":"97","messageId":"98","endLine":47,"endColumn":26},{"ruleId":"123","severity":1,"message":"133","line":74,"column":39,"nodeType":"125","messageId":"126","endLine":74,"endColumn":41},{"ruleId":"99","replacedBy":"134"},{"ruleId":"101","replacedBy":"135"},{"ruleId":"95","severity":1,"message":"136","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"137","line":18,"column":11,"nodeType":"97","messageId":"98","endLine":18,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":30,"column":13,"nodeType":"121","endLine":30,"endColumn":66},{"ruleId":"95","severity":1,"message":"138","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":23},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'adminUser' is assigned a value but never used.","'setAdminUser' is assigned a value but never used.","'history' is assigned a value but never used.","'log' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CheckCircleOutlineIcon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["139"],["140"],"'pageImageFull' is assigned a value but never used.","'setPageImageFull' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","Expected '===' and instead saw '=='.",["139"],["140"],"'useState' is defined but never used.","'classes' is assigned a value but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]