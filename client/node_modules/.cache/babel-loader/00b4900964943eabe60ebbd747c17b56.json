{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/great_dev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactExpress-main/client/src/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Login from \"./Components/auth/login/Login\";\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport ShowList from \"./Components/ShowList\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  root: {\n    marginLeft: '50%',\n    color: '#eaa70a',\n    fontSize: 'large'\n  }\n});\n\nfunction Main() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'right'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: [['Login'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)), ['Показать список блоков'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/showList\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u0431\\u043B\\u043E\\u043A\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [['menu'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.root,\n          onClick: toggleDrawer(anchor, true),\n          children: anchor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: anchor,\n          open: state[anchor],\n          onClose: toggleDrawer(anchor, false),\n          children: list(anchor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, anchor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/showList\",\n          children: /*#__PURE__*/_jsxDEV(ShowList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Main, \"WB+kmLRhiXdIVZEQG0qR+n/hRtA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/great_dev/Рабочий стол/ReactExpress-main/client/src/main.js"],"names":["React","useState","Login","BrowserRouter","Router","Link","Route","Switch","ShowList","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useStyles","list","width","fullList","root","marginLeft","color","fontSize","Main","classes","state","setState","right","toggleDrawer","anchor","open","event","type","key","map","text","index"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Login from \"./Components/auth/login/Login\";\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom';\nimport ShowList from \"./Components/ShowList\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    marginLeft: '50%',\n    color: '#eaa70a',\n    fontSize: 'large'\n  }\n});\n\n \n function Main() {\n    const classes = useStyles();\n    const [state, setState] = useState({\n      right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        setState({ ...state, [anchor]: open }); \n      };\n    \n      const list = (anchor) => (\n        <div\n          className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'right',\n          })}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n            {['Login'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText><Link to='/login'><span>Login</span></Link></ListItemText>\n                \n              </ListItem>\n            ))}\n             {['Показать список блоков'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <Link to='/showList'><ListItemText>Показать список блоков</ListItemText></Link>\n                \n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n        </div>\n      );\n\n\n     return (\n         <Router>\n         <div>\n         {['menu'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button  className={classes.root} onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n\n        \n             \n\n             <Switch>\n                 <Route path='/login'>\n                    <Login />\n                 </Route>\n                 <Route path='/showList'>\n                    <ShowList />\n                 </Route>\n             </Switch>\n         </div>\n         </Router>\n     )\n }\n\n export default Main;"]},"metadata":{},"sourceType":"module"}