{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/great_dev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactExpress-main/client/src/Components/ShowChecking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ShowImagesFUll from './ShowImagesFull';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  },\n  title: {\n    textAlign: 'center'\n  },\n  date: {\n    fontSize: '1rem',\n    margin: '2rem'\n  },\n  imgPosition: {\n    textAlign: 'center'\n  },\n  container: {\n    display: 'inline-block',\n    flexWrap: 'nowrap'\n  }\n});\n\nfunction ShowChecking() {\n  _s();\n\n  const classes = useStyles();\n  const [blockList, setBlockList] = useState([]);\n  const [pageImageFull, setPageImageFull] = useState([]);\n  const [flag, setFlag] = useState(false);\n  const [count, setCount] = useState(1);\n  useEffect(() => {\n    axios.get('/showFormCheck').then(res => setBlockList(res.data)).catch(err => console.log(err));\n  }, []);\n\n  const showFullImg = image => {\n    setFlag(!flag);\n    setCount(count + 1);\n\n    if (flag) {\n      for (let i = 0; i < count; i++) {\n        setPageImageFull( /*#__PURE__*/_jsxDEV(ShowImagesFUll, {\n          imgLink: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this));\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        setPageImageFull([]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0411\\u043B\\u043E\\u043A\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), blockList.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.date,\n        children: el.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => showFullImg(el.img),\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.imgPosition,\n      children: pageImageFull\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowChecking, \"5ZWWkwRR5WvMAvlqROQ9b4qFcBg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShowChecking;\nexport default ShowChecking;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowChecking\");","map":{"version":3,"sources":["/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowChecking.js"],"names":["React","useEffect","useState","axios","ShowImagesFUll","makeStyles","Button","useStyles","root","width","title","textAlign","date","fontSize","margin","imgPosition","container","display","flexWrap","ShowChecking","classes","blockList","setBlockList","pageImageFull","setPageImageFull","flag","setFlag","count","setCount","get","then","res","data","catch","err","console","log","showFullImg","image","i","map","el","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ShowImagesFUll from './ShowImagesFull';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n    },\n    title:{\n        textAlign:'center'\n    },\n    date: {\n        fontSize:'1rem',\n        margin:'2rem'\n    },\n    imgPosition: {\n        textAlign:'center'\n    },\n    container: {\n        display:'inline-block',\n        flexWrap:'nowrap',\n    }\n  });\n\nfunction ShowChecking() {\n    const classes = useStyles();\n    const [blockList,setBlockList] = useState([]);\n    const [pageImageFull,setPageImageFull] = useState([]);\n    const [flag,setFlag] = useState(false);\n    const [count,setCount] = useState(1);\n\n    useEffect(() => {\n        axios.get('/showFormCheck')\n        .then(res => setBlockList(res.data))\n        .catch(err => console.log(err))\n    },[]);\n\n    const showFullImg = (image) => {\n        setFlag(!flag);\n        setCount(count + 1);\n        if(flag) {\n            for(let i = 0; i < count; i++) {\n                setPageImageFull(<ShowImagesFUll imgLink={image} />)\n            }\n        }\n        else {\n            for(let i = 0; i < count; i++) {\n                setPageImageFull([])\n            }\n        }\n    }\n\n    return (\n        <div>\n            <h1 className={classes.title}>Список Блоков</h1>\n                {blockList.map(el => \n                    <div className={classes.container}>\n                        <div className={classes.date}>{el.date}</div>\n                        <Button variant='contained' color='primary' onClick={() => showFullImg(el.img)}>Показать График</Button>\n                    </div>\n                )}\n                <p className={classes.imgPosition}>{pageImageFull}</p>\n        </div>\n    )\n}\n\nexport default ShowChecking;"]},"metadata":{},"sourceType":"module"}