{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/great_dev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/ReactExpress-main/client/src/Components/ShowImagesFull.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles({\n  root: {\n    width: 500\n  },\n  title: {\n    textAlign: 'center'\n  },\n  ImgLink: {\n    marginLeft: '40%',\n    marginTop: '-25%',\n    position: 'absolute',\n    zIndex: '2',\n    maxWidth: '15rem',\n    maxHeight: '25rem',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nfunction ShowImagesFUll(props) {\n  _s();\n\n  const {\n    imgLink\n  } = props;\n  const classes = useStyles();\n  const [sr, setSr] = useState();\n  let blob = new Blob([imgLink.data]);\n  let links = URL.createObjectURL(blob);\n  let reader = new FileReader();\n  reader.readAsDataURL(blob); // конвертирует Blob в base64 и вызывает onload\n\n  reader.onload = function () {\n    setSr(reader.result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ImgLink,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: links\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowImagesFUll, \"1FQu6aQnaWbhU8BbekgJn/vo7F0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShowImagesFUll;\nexport default ShowImagesFUll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowImagesFUll\");","map":{"version":3,"sources":["/home/great_dev/Рабочий стол/ReactExpress-main/client/src/Components/ShowImagesFull.js"],"names":["React","useState","makeStyles","Button","useStyles","root","width","title","textAlign","ImgLink","marginLeft","marginTop","position","zIndex","maxWidth","maxHeight","height","ShowImagesFUll","props","imgLink","classes","sr","setSr","blob","Blob","data","links","URL","createObjectURL","reader","FileReader","readAsDataURL","onload","result"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADmB;AAIzBC,EAAAA,KAAK,EAAC;AACFC,IAAAA,SAAS,EAAC;AADR,GAJmB;AAOzBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAC,KADN;AAELC,IAAAA,SAAS,EAAC,MAFL;AAGLC,IAAAA,QAAQ,EAAC,UAHJ;AAILC,IAAAA,MAAM,EAAC,GAJF;AAKLC,IAAAA,QAAQ,EAAC,OALJ;AAMLC,IAAAA,SAAS,EAAC,OANL;AAOLT,IAAAA,KAAK,EAAC,MAPD;AAQLU,IAAAA,MAAM,EAAC;AARF;AAPgB,CAAD,CAA5B;;AAmBA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AACA,QAAME,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAAEiB,EAAF,EAAKC,KAAL,IAAcrB,QAAQ,EAA5B;AAEA,MAAIsB,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,OAAO,CAACM,IAAT,CAAT,CAAX;AACA,MAAIC,KAAK,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AAEE,MAAIM,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,aAAP,CAAqBR,IAArB,EATyB,CASG;;AAE5BM,EAAAA,MAAM,CAACG,MAAP,GAAgB,YAAW;AAEvBV,IAAAA,KAAK,CAACO,MAAM,CAACI,MAAR,CAAL;AACH,GAHD;;AAKF,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACX,OAAxB;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEiB;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArBQT,c;UAEWb,S;;;KAFXa,c;AAuBT,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n    },\n    title:{\n        textAlign:'center'\n    },\n    ImgLink: {\n        marginLeft:'40%',\n        marginTop:'-25%',\n        position:'absolute',\n        zIndex:'2',\n        maxWidth:'15rem',\n        maxHeight:'25rem',\n        width:'100%',\n        height:'100%'\n    }\n  });\n\nfunction ShowImagesFUll(props) {\n    const {imgLink} = props;\n    const classes = useStyles();\n    const [ sr,setSr] = useState()\n\n    let blob = new Blob([imgLink.data])\n    let links = URL.createObjectURL(blob)\n   \n      let reader = new FileReader();\n      reader.readAsDataURL(blob); // конвертирует Blob в base64 и вызывает onload\n\n      reader.onload = function() {\n          \n          setSr(reader.result)\n      };\n\n    return (\n        <div className={classes.ImgLink}>\n            <img src={links} />\n        </div>\n    )\n}\n\nexport default ShowImagesFUll;"]},"metadata":{},"sourceType":"module"}